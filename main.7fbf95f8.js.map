{"version":3,"sources":["scripts/main.js"],"names":["tree","document","querySelector","children","header","innerHTML","childNodes","data","firstElementChild","nextLayer","child","addEventListener","e","target","closest","headerContent","parentNode","hidden"],"mappings":";AAAA,aA4BA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,MAAA,EAAA,OAAA,UAAA,CAAA,GAAA,MAAA,QAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAA,EAAA,EAAA,EAAA,aAAA,MAAA,CAAA,EAAA,EAAA,EAAA,WAAA,OAAA,GAAA,EAAA,OAAA,CAAA,MAAA,GAAA,CAAA,MAAA,EAAA,MAAA,EAAA,OAAA,EAAA,SAAA,GAAA,MAAA,GAAA,EAAA,GAAA,MAAA,IAAA,UAAA,yIAAA,IAAA,EAAA,EAAA,GAAA,EAAA,GAAA,EAAA,MAAA,CAAA,EAAA,WAAA,EAAA,EAAA,OAAA,aAAA,EAAA,WAAA,IAAA,EAAA,EAAA,OAAA,OAAA,EAAA,EAAA,KAAA,GAAA,EAAA,SAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,WAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,KAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EA1BA,IA0BA,EA1BMA,EAAOC,SAASC,cAAc,SAEfF,EAAAA,EAAAA,EAAKG,UAwB1B,IAxBoC,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAAzBC,IAAAA,EAAyB,EAAA,MAClCA,EAAOC,UAAY,uBAEbD,OAAAA,EAAOE,WAAW,GAAGC,KAIrBH,qBAAAA,qBAAAA,OAAAA,EAAOI,kBAAkBH,UAN/B,eASMI,IAV4B,EAU5BA,EAAYL,EAAOD,SAAS,GAEdM,EAAAA,EAAAA,EAAUN,UAZI,IAYM,IAAA,EAAA,MAAA,EAAA,EAAA,KAAA,MAAA,CAA7BO,IAAAA,EAA6B,EAAA,MACtCA,EAAML,UAAY,uBAEdK,OAAAA,EAAMJ,WAAW,GAAGC,KAIpBG,qBAAAA,qBAAAA,OAAAA,EAAMF,kBAAkBH,UAN5B,gBAbgC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,MAwBpC,MAAA,GAAA,EAAA,EAAA,GAAA,QAAA,EAAA,IAAAL,EAAKW,iBAAiB,QAAS,SAACC,GACxBC,IAAAA,EAASD,EAAEC,OAAOC,QAAQ,QAE5B,GAACD,EAAD,CAIEE,IAAAA,EAAgBF,EAAOG,WAAWd,cAAc,MAEtDa,EAAcE,QAAUF,EAAcE","file":"main.7fbf95f8.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst tree = document.querySelector('.tree');\n\nfor (const header of tree.children) {\n  header.innerHTML = `\n    <span>\n      ${header.childNodes[0].data}\n    </span>\n  ` + `\n    <ul>\n      ${header.firstElementChild.innerHTML}\n    </ul>`;\n\n  const nextLayer = header.children[1];\n\n  for (const child of nextLayer.children) {\n    child.innerHTML = `\n    <span>\n      ${child.childNodes[0].data}\n    </span>\n  ` + `\n    <ul>\n      ${child.firstElementChild.innerHTML}\n    </ul>`;\n  }\n}\n\ntree.addEventListener('click', (e) => {\n  const target = e.target.closest('span');\n\n  if (!target) {\n    return;\n  }\n\n  const headerContent = target.parentNode.querySelector('ul');\n\n  headerContent.hidden = !headerContent.hidden;\n});\n"]}